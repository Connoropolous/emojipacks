#!/usr/bin/env node

var https = require('https');
var fs = require('fs');
var Pack = require('../lib/pack');
var co = require('co');
var async = require('async');

/**
 * Standardize the emoji file.
 */

function clean(object) {
  if (!object.emojis) {
    object.emojis = [];
    for (var i = 0; i < object.length; i++) {
      if (!object[i].src) object[i].src = object[i].image_url;
      object.emojis.push(object[i]);
    }
  }
  return object;
}

function download(url, dest, cb) {
  var file = fs.createWriteStream(dest);
  var request = https.get(url, function(response) {
    response.pipe(file);
    file.on('finish', function() {
      file.close(cb);  // close() is async, call cb after close completes.
    });
  }).on('error', function(err) { // Handle errors
    fs.unlink(dest); // Delete the file async. (But we don't check the result)
    if (cb) cb(err.message);
  });
};

co(function*() {
  var pack = yield Pack.get('./metacodes.yaml');
  pack = clean(pack);
  async.each(pack.emojis, function (emoji, done) {
    var name = emoji.src.split('/')[7]
    var dest = './metacodes/' + name
    download(emoji.src, dest, done)
  }, function (err) {
    console.log(err || 'success');
    process.exit();
  })
  
})